
Data generated by network sensors:

Examples:

	NetFlow sensors on a router 

	Sensors that collect traffic using packet capture, most notably tcpdump

Packet and Frame Formats

	On almost any modern system, tcpdump will be capturing IP over Ethernet, meaning that the data actually captured by 'libcap' consists of Ethernet frames containing over 80 unique protocols, on any operational network the overwhelming majority of traffic will originate from just 3 of these: TCP(protocol 6), UDP(protocol 17), and ICMP(protocol 1).

	While TCP, UDP, and ICMP make up the overwhelming majority of IP traffic, a number of other protocols may appear in networks, in particular if VPNs are used. 

	The Internet Assigned Numbers Authority (IANA) has a complete list of IP suite protocols. 

	Full packet capture is often impractical. its too big and redundant as hell. 

	There are three major mechanisms for filtering or limiting packet capture data:

		The use of rolling buffers to keep a timed subsample

		Manipulating the snap length to capture only a fixed-size packet (such as headers) 

		Filtering traffic using Berkeley Packet Filter (BPF) or other filtering rules. 

	Each approach is an analytics trade-off that provides different benefits and disadvantages.

	While tcpdump is the oldest and most common packet capture tool , there are many alternatives.
		In the purely software domain, Googl'e Stenographer project is a high-performance capture solution, and AOL's Moloch combines packet capture and analysis. 

		There are also a number of hardware-based capture tools that use optimized NICs to capture at higher line speeds. 

	Rolling Buffers:

		A rolling buffer is a location in memory where data is dumped cyclically: information is dropped linearly, and when the buffer is filled up, data is duimped at the beginning of the buffer, and the process repeats. 

		Implementing a rolling buffer in tcpdump:
			rolling_buffer_tcpdump.sh

		Rolling buffers implement a time horizon on traffic analysis: data is available only as long as it's in the buffer. For that reason, working with smaller file sizes is recommended, because when you find something aberrant, it needs to be pulled out of the buffers quickly. 

	Limiting the Data captured from each packet:

		An alternative to capturing the complete packet is to capture a limited subset of the payload, controlled in tcpdump by the snaplen (-s) argument. Snaplen constrains packets to the frame size specified in the argument.

		If you specify a frame size of at least 68 bytes, you will record the TCP or UDP headers. 

	Filtering Specific Types of Packets

	An alternative to filtering at the switch is to filter after collecting the traffic at the spanning port. With tcpdump and other tools, this can be easily done using BPF. BPF allows an operator to specify arbitrarily complex filters, and consequently the possibilities are fairly extensive. 

	address_filtering_bpf.sh

NetFlow:

	NetFlow is a traffic summarization standard developed by Cisco Systems and originally used for network services billing. 

	While not intended for security, NetFlow is fantastically useful for that purpose becasue it provides a compact summary of the network traffic sessions that can be rapidly accessed and contains the highest-value information that you can keep in a relatively compact format. 

Data Collection via IDS